# Ultralytics YOLO ðŸš€ (AGPL-3.0)

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
nc: 80           # number of classes
scales:          # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75,  768]
  l: [1.00, 1.00,  512]
  x: [1.00, 1.25,  512]

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Backbone (YOLOv8n) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]          # 0  P1/2
  - [-1, 1, Conv, [128, 3, 2]]         # 1  P2/4
  - [-1, 3, C2f, [128, True]]          # 2
  - [-1, 1, Conv, [256, 3, 2]]         # 3  P3/8
  - [-1, 6, C2f, [256, True]]          # 4
  - [-1, 1, Conv, [512, 3, 2]]         # 5  P4/16
  - [-1, 6, C2f, [512, True]]          # 6
  - [-1, 1, Conv, [1024, 3, 2]]        # 7  P5/32
  - [-1, 3, C2f, [1024, True]]         # 8
  - [-1, 1, SPPF, [1024, 5]]           # 9

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Head (with learnable fusion) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
head:
  # ----- top-down path -----
  - [-1, 1, Conv, [512, 1, 1]]                         # 10  reduce C
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]         # 11  P5â†‘
  - [[-1, 6], 1, LearnableFusion, [2, "scalar"]]       # 12  P5â†‘ + P4
  - [-1, 3, C2f, [512]]                                # 13  P4'

  - [-1, 1, Conv, [256, 1, 1]]                         # 14  reduce C
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]         # 15  P4'â†‘
  - [[-1, 4], 1, LearnableFusion, [2, "scalar"]]       # 16  P4'â†‘ + P3
  - [-1, 3, C2f, [256]]                                # 17  P3'

  # ----- bottom-up path -----
  - [-1, 1, Conv, [256, 3, 2]]                         # 18  P3'â†“
  - [[-1, 14], 1, LearnableFusion, [2, "scalar"]]      # 19  P3'â†“ + P4'
  - [-1, 3, C2f, [512]]                                # 20  P4''

  - [-1, 1, Conv, [512, 3, 2]]                         # 21  P4''â†“
  - [[-1, 10], 1, LearnableFusion, [2, "scalar"]]      # 22  P4''â†“ + P5
  - [-1, 3, C2f, [1024]]                               # 23  P5''

  # ----- detect -----
  - [[17, 20, 23], 1, Detect, [nc]]                    # 24  outputs P3', P4'', P5''
